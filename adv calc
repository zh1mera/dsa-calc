//imports para sa mga gagamitin sa calclator
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;


public class Calculator implements ActionListener {


    //Gagawa ng frame
    JFrame frame;
    JTextField textField;
    JButton[] numberButtons = new JButton[10]; //10 siya since there are 10 numbers from 0-9
    JButton[] functionButtons = new JButton[20];
    JButton addButton, subButton, mulButton, divButton, extButton;
    JButton decButton, equButton, delButton, clrButton, negButton;
    JButton rndffButton, minMaxButton, flrButton, ceilButton, absButton, commaButton;
    JButton powerButton, dblSummationButton, factButton, avgButton;
    JPanel panel;
   
 


    //default font naten Arial
    Font Arial = new Font("Arial", Font.PLAIN, 30);


    //Initialize ng variable na maghohold ng input and operation na gagamitin
    double num1 = 0, num2 = 0, result = 0;
    char operator;




    //fonttttt na gusto ni navarro
    Font minecraft;


    Calculator() {
       
        try {   //  custom font galing file
            minecraft = Font.createFont(Font.TRUETYPE_FONT, new File("minecraft_font.ttf")).deriveFont(30f);
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            ge.registerFont(minecraft);
        } catch (IOException | FontFormatException e) {
            e.printStackTrace();
            minecraft = new Font("Arial", Font.PLAIN, 30); // Fallback font
        }


        //Gawa ng frame
        frame = new JFrame("Caculator");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(700, 600);
        frame.setLayout(null);


        //Text field and its properties. Dito rin makikita yung results
        textField = new JTextField();
        textField.setBounds(50, 25, 580, 90);
        textField.setFont(minecraft);
        textField.setEditable(false);
        textField.setBackground(Color.decode("#A7AE8E"));  
        textField.setForeground(Color.BLACK);




        //Maglalagay na ng mga buttons
        addButton = new pampaganda("+", 15);
        subButton = new pampaganda("-", 15);
        mulButton = new pampaganda("*", 15);
        divButton = new pampaganda("/", 15);
        decButton = new pampaganda(".", 30);
        equButton = new pampaganda("=", 30);
        delButton = new pampaganda("DEL", 30);
        clrButton = new pampaganda("CLR", 30);
        negButton = new pampaganda("(-)", 30);
        rndffButton = new pampaganda("RnD", 30);
        minMaxButton = new pampaganda("MnMx", 30);
        flrButton = new pampaganda("FLOOR", 30);
        ceilButton = new pampaganda("Ceil", 30);
        absButton = new pampaganda("Abs", 30);
        extButton = new pampaganda("Exit", 30);
        powerButton = new pampaganda("^", 30);
        dblSummationButton = new pampaganda ("âˆ‘", 30);
        factButton = new pampaganda("n!", 30);
        commaButton = new pampaganda(",", 30);
        avgButton = new pampaganda("Avg", 30);
   


        //Eto yung index sa arrays natin sa taas ng functionButtons
        functionButtons [0] = addButton;
        functionButtons [1] = subButton;
        functionButtons [2] = mulButton;
        functionButtons [3] = divButton;
        functionButtons [4] = decButton;
        functionButtons [5] = equButton;
        functionButtons [6] = delButton;
        functionButtons [7] = clrButton;
        functionButtons [8] = rndffButton;
        functionButtons [9] = minMaxButton;
        functionButtons [10] = negButton;
        functionButtons [11] = flrButton;
        functionButtons [12] = ceilButton;
        functionButtons [13] = absButton;
        functionButtons [14] = extButton;
        functionButtons [15] = powerButton;
        functionButtons [16] = dblSummationButton;
        functionButtons [17] = factButton;
        functionButtons [18] = commaButton;
        functionButtons [19] = avgButton;


        for(int i = 0; i < 20; i++){
            functionButtons[i].addActionListener(this);
            functionButtons[i].setFont(minecraft);
            functionButtons[i].setFocusable(false);
            functionButtons[i].setBackground(Color.decode("#606B76"));  
            functionButtons[i].setForeground(Color.WHITE);
        }




        //custom font size para magkasya -carl
        ceilButton.setFont(minecraft.deriveFont(20f));
        extButton.setFont(minecraft.deriveFont(20f));
        absButton.setFont(minecraft.deriveFont(20f));
        rndffButton.setFont(minecraft.deriveFont(20f));
        flrButton.setFont(minecraft.deriveFont(19f));
        minMaxButton.setFont(minecraft.deriveFont(19f));
        avgButton.setFont(minecraft.deriveFont(20f));


        commaButton.setFont(Arial.deriveFont(55f));//Arial font para mas distinguish comma sa decimal
        decButton.setFont(Arial.deriveFont(60f));
        dblSummationButton.setFont(Arial);


        //custom kulay para fancy -carl
        equButton.setBackground(Color.decode("#5CC79F")); // Green
        delButton.setBackground(Color.decode("#F46464")); // Red
        clrButton.setBackground(Color.decode("#F7B46D")); //orangee
        extButton.setBackground(Color.decode("#2F2F2F")); //black na hindi masyado maitim


        for(int i = 0; i < 10; i++){
            numberButtons[i] = new JButton(String.valueOf(i));
            numberButtons[i].addActionListener(this);
            numberButtons[i].setFont(minecraft);
            numberButtons[i].setFocusable(false);
            numberButtons[i].setBackground(Color.decode("#75818F"));  
            numberButtons[i].setForeground(Color.WHITE); //kulay pagni click


        }


        //eto yung sa layout ng calculator
        panel = new JPanel();
        panel.setBounds(50, 130, 580, 400);
        panel.setLayout(new GridLayout(6, 5, 10, 15));


        panel.setBackground(Color.decode("#C9C9C9"));


        //maglalagay na ng mga buttons sa JFrame. Kung ano unang nakatype, yun yung mauuna sa frame
        panel.add(numberButtons[1]);
        panel.add(numberButtons[2]);
        panel.add(numberButtons[3]);
        panel.add(addButton);
        panel.add(clrButton);


        panel.add(numberButtons[4]);
        panel.add(numberButtons[5]);
        panel.add(numberButtons[6]);
        panel.add(subButton);
        panel.add(delButton);


        panel.add(numberButtons[7]);
        panel.add(numberButtons[8]);
        panel.add(numberButtons[9]);
        panel.add(mulButton);
        panel.add(absButton);
        panel.add(decButton);
       
        panel.add(numberButtons[0]);
        panel.add(equButton);
        panel.add(divButton);
        panel.add(negButton);


        panel.add(rndffButton);
        panel.add(minMaxButton);
        panel.add(flrButton);
        panel.add(ceilButton);
        panel.add(commaButton);


        panel.add(factButton);
        panel.add(powerButton);
        panel.add(dblSummationButton);
        panel.add(avgButton);
        panel.add(extButton);
       
        frame.add(panel);
        frame.add(textField);
        frame.setLocationRelativeTo(null);
        frame.getContentPane().setBackground(Color.decode("#C9C9C9"));
        frame.setVisible(true);


       
    }


   




    public static void main(String[] args) throws Exception {


        new Calculator();
    }


    //Dito na iscan yung mga input
    @Override
    public void actionPerformed(ActionEvent e){
        for(int i = 0; i < 10; i++){
            if (e.getSource() == numberButtons[i]){
                textField.setText(textField.getText().concat(String.valueOf(i)));
            }
        }
        //Para sa decimal point
        if(e.getSource() == decButton){
            textField.setText(textField.getText().concat("."));
        }


        //Addition
        if(e.getSource() == addButton){
            num1 = Double.parseDouble(textField.getText());
            operator = '+';
            textField.setText(textField.getText() + " + ");
        }


        //Substraction
        if(e.getSource() == subButton){
            num1 = Double.parseDouble(textField.getText());
            operator = '-';
            textField.setText(textField.getText() + " - ");
        }


        //Multiplication
        if(e.getSource() == mulButton){
            num1 = Double.parseDouble(textField.getText());
            operator = '*';
            textField.setText(textField.getText() + " * ");
        }


        //Division
        if(e.getSource() == divButton){
            num1 = Double.parseDouble(textField.getText());
            operator = '/';
            textField.setText(textField.getText() + " / ");
        }


        //equalButton apaka haba
        if (e.getSource() == equButton) {
            String currentText = textField.getText();
       
            // if, pag factorial "!"
            if (currentText.endsWith("!")) {
                String numberPart = currentText.substring(0, currentText.length() - 1).trim();
                try {
                    num1 = Integer.parseInt(numberPart);
                    long fact = 1;
       
                    if (num1 < 0) {
                        textField.setText("Invalid factorial");
                    } else {
                        for (int i = 1; i <= num1; i++) {
                            fact *= i; // Calculate
                        }
                        textField.setText(String.valueOf(fact)); // Display
                    }
                } catch (NumberFormatException ex) {
                    textField.setText("Invalid.");
                }
               
               
                // else , pag power "^"
            } else if (currentText.contains("^")) {
                String[] parts = currentText.split("\\^");
                if (parts.length == 2) {
                    try {
                        double base = Double.parseDouble(parts[0].trim());
                        double exponent = Double.parseDouble(parts[1].trim());
                        double result = Math.pow(base, exponent);
                        textField.setText(String.valueOf(result)); // Display result
                    } catch (NumberFormatException ex) {
                        textField.setText("Invalid."); // Handle invalid inputs
                    }
                } else {
                    textField.setText("error, missing exponent."); // walang  exponent nilagay
                }
            } else {
                // basic operations [ + , -, *, / ]
                try {
                    if (operator == '+') {
                        String[] parts = currentText.split("\\+");
                        num2 = Double.parseDouble(parts[1].trim());
                        result = num1 + num2;
                    } else if (operator == '-') {
                        String[] parts = currentText.split("-");
                        num2 = Double.parseDouble(parts[1].trim());
                        result = num1 - num2;
                    } else if (operator == '*') {
                        String[] parts = currentText.split("\\*");
                        num2 = Double.parseDouble(parts[1].trim());
                        result = num1 * num2;
                    } else if (operator == '/') {
                        String[] parts = currentText.split("/");
                        num2 = Double.parseDouble(parts[1].trim());
                        if (num2 == 0) {
                            if (num1 == 0) {
                                textField.setText("Quotient is indeterminate."); // zero over zero
                            } else {
                                textField.setText("Quotient is undefined."); // dibaydibay zero
                            }
                            return;
                        } else {
                            result = num1 / num2;
                        }
                    }
                    textField.setText(String.valueOf(result)); // Display
                    num1 = result;
                } catch (Exception ex) {
                    textField.setText("Invalid.");
                }
            }
        }
       
       






        //Clear lahat ng input
        if(e.getSource() == clrButton){
            textField.setText("");
        }
        //Delete ng one index sa input
        if(e.getSource() == delButton){
            String string = textField.getText();
            textField.setText("");
            for(int i = 0; i < string.length()-1; i++){
                textField.setText(textField.getText()+string.charAt(i));
            }
        }










        //Para sa negative button. Click muna number bago negative sign para magfunction
        if(e.getSource() == negButton){
            double negative = Double.parseDouble(textField.getText());
            negative *= -1;
            textField.setText(String.valueOf(negative));
        }




        //Absolute value
        if (e.getSource() == absButton) {
            double absolute = Double.parseDouble(textField.getText());
            absolute = Math.abs(absolute);
            textField.setText(String.valueOf(absolute));
        }






        //Floor
        if (e.getSource() == flrButton) {
            double floor = Double.parseDouble(textField.getText());
            floor = Math.floor(floor);
            textField.setText(String.valueOf(floor));
        }






        //Ceiling
        if (e.getSource() == ceilButton) {
            double ceil = Double.parseDouble(textField.getText());
            ceil = Math.ceil(ceil);
            textField.setText(String.valueOf(ceil));
        }
       




        //Rounding off to whole numbers
        if (e.getSource() == rndffButton) {
            double roundOff = Double.parseDouble(textField.getText());
            roundOff = Math.round(roundOff);
            textField.setText(String.valueOf(roundOff));
        }




        //MinMax
        if (e.getSource() == minMaxButton) {
            new MinMaxIO();
        }




        //PowerButton
        if (e.getSource() == powerButton) {
            textField.setText(textField.getText() + "^");
        }




        //comma , maglagay comma para masplit number for doublesummation at average
        if (e.getSource() == commaButton) {
            textField.setText(textField.getText().concat(","));
        }




        //factorialllllllllll
        if (e.getSource() == factButton) {
            String currentText = textField.getText();
            if (!currentText.endsWith("!")) {
                textField.setText(currentText + "!");
            }
        }
           


        //Summation
        if (e.getSource() == dblSummationButton) {
            String currentText = textField.getText().trim();
       
            try {
           
                String[] limits = currentText.split(","); // hiwalay by comma or space
       
                if (limits.length == 2) {
                    int a = Integer.parseInt(limits[0].trim());
                    int b = Integer.parseInt(limits[1].trim());
       
                    if (a <= 0 || b <= 0) {
                        textField.setText("must be positive integers");
                        return;
                    }
       
                    int sum = 0;
                    // Double summation logic
                    for (int i = 1; i <= a; i++) {
                        for (int j = 1; j <= b; j++) {
                            sum += (i * 3 * j); // ang calculation logic
                        }
                    }
       
                    // Display the result in the textField
                    textField.setText(String.valueOf(sum));
                } else {
                    textField.setText("Invalid.");
                }
       
            } catch (NumberFormatException ex) {
                textField.setText("Invalid numbers for summation");
            }
        }




        //average
        if (e.getSource() == avgButton) {
            String currentText = textField.getText().trim();
       
            try {
                // hatiin input by commaButton
                String[] numbers = currentText.split(",");
       
                double sum = 0;
                int count = numbers.length;  //bilagn ilang input
       
                // add lahat
                for (String number : numbers) {
                    sum += Double.parseDouble(number.trim());
                }
       
                // divide sum by ilagn numbers - carl
                double average = sum / count;
       
                // Display
                textField.setText(String.valueOf(average));
       
            } catch (NumberFormatException ex) {
                textField.setText("Invalid.");  // Clear
            }
        }
       


        //Naglagay ako exit button para mapunan yung isang vacant space HAHAHAHAHAHA
        if (e.getSource() == extButton){
            int a = JOptionPane.showConfirmDialog(null, "Do you want to close the calculator?", "Select", JOptionPane.YES_NO_OPTION);
                if (a == 0) {
                System.exit(0);
            }
        }
    }
}






